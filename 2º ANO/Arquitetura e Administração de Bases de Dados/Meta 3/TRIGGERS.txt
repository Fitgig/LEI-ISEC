L)

CREATE OR REPLACE TRIGGER upstatus_entrega
AFTER UPDATE ON estadoPedido
FOR EACH ROW
DECLARE
    estadoID estado.idEstado%TYPE;
BEGIN
    SELECT E.idEstado INTO estadoID
    FROM Estado E 
    WHERE E.nomeEstado = 'Entregue';
    
    IF :NEW.idEstado = estadoID THEN
        UPDATE armazem A
        SET A.volumeDispArmazem = A.volumeDispArmazem - (SELECT P.volumePedido FROM pedido P WHERE P.idPedido = :OLD.idPedido); 
    END IF;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Estado não encontrado.');
END;

___________________________________________________________________________________________

M)

CREATE OR REPLACE TRIGGER descarrega_no_armazem
AFTER DELETE ON VIAGEM 
FOR EACH ROW 
DECLARE
    volumeTotal pedido.volumePedido%TYPE;
    armazemID troco.Arm_idArmazem%TYPE;
BEGIN
    SELECT SUM(P.volumePedido) INTO volumeTotal
    FROM pedido P, aloca A
    WHERE P.idPedido = A.idPedido AND A.idViagem = :OLD.idViagem;
    
    SELECT T.Arm_idArmazem INTO armazemID
    FROM Troco T
    WHERE T.idTroco = :OLD.idTroco;
    
    UPDATE armazem A
    SET A.volumeDispArmazem = A.volumeDispArmazem - volumeTotal
    WHERE A.idArmazem = armazemID;  
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Armazém ou Pedido não encontrados');
END;

___________________________________________________________________________________________

N)


___________________________________________________________________________________________

O)

CREATE OR REPLACE TRIGGER altera_veiculo
AFTER UPDATE ON aloca
FOR EACH ROW
DECLARE
    CURSOR C1 IS
        SELECT V.taxaOcupacao
        FROM viagem V 
        WHERE V.idViagem = :NEW.idViagem;

    taxa viagem.taxaOcupacao%TYPE;
    veiculoID veiculo.idVeiculo%TYPE;
BEGIN
    SELECT V.taxaOcupacao INTO taxa
    FROM viagem V
    WHERE V.idViagem = :NEW.idViagem;
    
    FOR r IN C1 
    LOOP
        WHILE r.taxaOcupacao < 80
        LOOP
            IF taxa > 95 THEN
                SELECT V.idVeiculo INTO veiculoID
                FROM veiculo V
                WHERE V.disponibilidadeVeiculo = 'Disponível';
              
                UPDATE viagem V
                SET V.idVeiculo = veiculoID
                WHERE V.idViagem = :NEW.idViagem;
            END IF;
        END LOOP;
    END LOOP;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Viagem não encontrada');
END;